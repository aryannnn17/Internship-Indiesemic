// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https: //docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https: //nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html
// #include <zephyr/dt-bindings/input/input-event-codes.h>

/ {

    gpio {
        compatible = "gpio-keys";
        ROW0_4x4: ROW0_4x4 {
            gpios = <&gpio0 20 GPIO_ACTIVE_HIGH>;
        };
        ROW1_4x4: ROW1_4x4 {
            gpios = <&gpio0 19 GPIO_ACTIVE_HIGH>;
        };
        ROW2_4x4: ROW2_4x4 {
            gpios = <&gpio0 18 GPIO_ACTIVE_HIGH>;
        };
        ROW3_4x4: ROW3_4x4 {
            gpios = <&gpio0 17 GPIO_ACTIVE_HIGH>;
        };
        COL0_4x4: COL0_4x4{
            gpios = <&gpio0 16 GPIO_ACTIVE_HIGH>;
        };
        COL1_4x4: COL1_4x4{
            gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
        };
        COL2_4x4: COL2_4x4{
            gpios = <&gpio0 14 GPIO_ACTIVE_HIGH>;
        };
        COL3_4x4: COL3_4x4{
            gpios = <&gpio0 13 GPIO_ACTIVE_HIGH>;
        };

        ROW0_4x1: ROW0_4x1{
            gpios = <&gpio0 2 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
        };

        COL0_4x1: COL0_4x1{
            gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
        };

        COL1_4x1: COL1_4x1{
            gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
        };

        COL2_4x1: COL2_4x1{
            gpios = <&gpio0 3 GPIO_ACTIVE_HIGH>;
        };

        COL3_4x1: COL3_4x1{
            gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
        };

        eeprom_wp: eeprom_wp {
            gpios = <&gpio0 25 GPIO_ACTIVE_HIGH>;
        };
    };

    aliases {
        kpd4x4-row0 = &ROW0_4x4;
        kpd4x4-row1 = &ROW1_4x4;
        kpd4x4-row2 = &ROW2_4x4;
        kpd4x4-row3 = &ROW3_4x4;
        kpd4x4-col0 = &COL0_4x4;
        kpd4x4-col1 = &COL1_4x4;
        kpd4x4-col2 = &COL2_4x4;
        kpd4x4-col3 = &COL3_4x4;
        kpd4x1-row0 = &ROW0_4x1;
        kpd4x1-col0 = &COL0_4x1;
        kpd4x1-col1 = &COL1_4x1;
        kpd4x1-col2 = &COL2_4x1;
        kpd4x1-col3 = &COL3_4x1;
        eeprom-wp = &eeprom_wp;
        eeprom-0 = &at24_eeprom;
    };

};

&gpio0 {
    status = "okay";
};

&i2c0 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-names = "default";
    clock-frequency = <I2C_BITRATE_STANDARD>;
};


&pinctrl {
    // compatible = "nordic,nrf-pinctrl";
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 11)>, <NRF_PSEL(TWIM_SCL, 0, 8)>;
            bias-pull-up;
        };
    };
    i2c1_default: i2c1_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 23)>, <NRF_PSEL(TWIM_SCL, 0, 24)>;
            bias-pull-up;
        };
    };
};

&i2c1 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    pinctrl-0 = <&i2c1_default>;
    pinctrl-names = "default";
    clock-frequency = <I2C_BITRATE_FAST>;
    at24_eeprom: eeprom@50 {
        compatible = "atmel,at24";
        status = "okay";
        reg = <0x50>;
        size = <4096>;
        pagesize = <32>;
        address-width = <8>;
        timeout = <5>;
    };
};


// &pinctrl {
//     // compatible = "nordic,nrf-pinctrl";
//     i2c1_default: i2c1_default {
//         group1 {
//             psels = <NRF_PSEL(TWIM_SDA, 0, 23)>, <NRF_PSEL(TWIM_SCL, 0, 24)>;
//             bias-pull-up;
//         };
//     };
// };

&uicr {
    gpio-as-nreset;
};
